// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeRecording.Setup;

#nullable disable

namespace TimeRecording.Migrations
{
    [DbContext(typeof(TimeRecordingDBContext))]
    [Migration("20250711095014_UpdateDatabase1")]
    partial class UpdateDatabase1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("TimeRecording.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonnelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("TimeRecording.Models.PersonTargetTimeModel", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("date");

                    b.Property<int>("TargetTimeModelId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "ValidFrom");

                    b.HasIndex("TargetTimeModelId");

                    b.ToTable("PersonTargetTimeModel");
                });

            modelBuilder.Entity("TimeRecording.Models.TargetTimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TargetTimeModel");
                });

            modelBuilder.Entity("TimeRecording.Models.TargetTimeModelTimes", b =>
                {
                    b.Property<int>("TargetTimeModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("date");

                    b.Property<int>("Friday")
                        .HasColumnType("smallint");

                    b.Property<int>("Monday")
                        .HasColumnType("smallint");

                    b.Property<int>("Saturday")
                        .HasColumnType("smallint");

                    b.Property<int>("Sunday")
                        .HasColumnType("smallint");

                    b.Property<int>("Thursday")
                        .HasColumnType("smallint");

                    b.Property<int>("Tuesday")
                        .HasColumnType("smallint");

                    b.Property<int>("Wednesday")
                        .HasColumnType("smallint");

                    b.HasKey("TargetTimeModelId", "ValidFrom");

                    b.ToTable("TargetTimeModelTimes");
                });

            modelBuilder.Entity("TimeRecording.Models.WorkingTime", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Minutes")
                        .HasColumnType("smallint");

                    b.HasKey("PersonId", "Date");

                    b.ToTable("WorkingTime");
                });

            modelBuilder.Entity("TimeRecording.Models.PersonTargetTimeModel", b =>
                {
                    b.HasOne("TimeRecording.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeRecording.Models.TargetTimeModel", "TargetTimeModel")
                        .WithMany()
                        .HasForeignKey("TargetTimeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("TargetTimeModel");
                });

            modelBuilder.Entity("TimeRecording.Models.TargetTimeModelTimes", b =>
                {
                    b.HasOne("TimeRecording.Models.TargetTimeModel", "TargetTimeModel")
                        .WithMany()
                        .HasForeignKey("TargetTimeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetTimeModel");
                });

            modelBuilder.Entity("TimeRecording.Models.WorkingTime", b =>
                {
                    b.HasOne("TimeRecording.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
